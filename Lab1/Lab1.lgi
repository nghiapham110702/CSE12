41 2 0
38 1
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 111 40 0 \NUL
Pham, Nghia
22 8 96 90 72 0 \NUL
ngmpham
22 64 272 264 252 0 \NUL
Part A Output                            
8 216 184 265 135 1 0
8 280 184 329 135 1 0
8 352 184 401 135 1 0
11 168 424 195 326 0 1
20 264 208 323 189 0
in_3
20 336 208 395 189 0
in_2
20 408 208 467 189 0
in_1
8 424 184 473 135 1 0
20 480 208 539 189 0
in_0
19 80 312 139 293 0
a_3
19 64 336 123 317 0
a_2
19 48 360 107 341 0
a_1
19 32 384 91 365 0
a_0
22 15 452 314 428 0 \NUL
The output was base on the switches
22 64 496 68 492 0 \NUL

22 406 427 780 403 0 \NUL
since I use the Boolean to come up with circuit.
7 360 664 409 615 0 1
7 360 704 409 655 0 1
19 272 592 331 573 0
c_2
19 272 632 331 613 0
c_1
19 272 672 331 653 0
c_0
22 416 688 480 668 0 \NUL
SOP/POS
22 416 648 492 628 0 \NUL
NAND Only
22 416 608 484 588 0 \NUL
NOR Only
22 443 459 701 435 0 \NUL
and connect them with the input
22 209 722 649 698 0 \NUL
I used truth table given in doc to come up with equation
22 208 745 611 721 0 \NUL
Then used the equation to come up with the circuit
22 280 32 653 12 0 \NUL
You are only permitted to modify or add text to this page.
22 280 56 605 36 0 \NUL
Your circuit must use senders and/or receivers to
22 280 80 538 60 0 \NUL
interface with these inputs and outputs.
7 472 360 521 311 0 1
7 544 360 593 311 0 1
7 616 360 665 311 0 1
19 416 392 475 373 0
b_2
19 488 392 547 373 0
b_1
19 560 392 619 373 0
b_0
7 360 624 409 575 0 1
22 64 136 616 116 0 \NUL
Input                                                                                                                                 
22 448 272 650 252 0 \NUL
Part B Output                            
22 272 552 473 532 0 \NUL
Part C Output                            
22 7 484 374 460 0 \NUL
The switches represent logic between 1 and 0
22 -20 515 558 491 0 \NUL
If the switch is 1 which mean on then one of the 7 segment line will be on.
22 399 487 787 463 0 \NUL
the output result are the same as the truth table.
22 153 773 799 749 0 \NUL
When stimulate it, the LED will turn on base on the input is given in the truth table.
22 20 545 180 521 0 \NUL
If it 0, then mean off
1 470 159 481 198
1 409 198 398 159
1 337 198 326 159
1 265 198 262 159
1 169 390 136 302
1 169 396 120 326
1 169 402 104 350
1 169 408 88 374
1 328 622 361 639
1 328 662 361 679
1 472 382 473 335
1 544 382 545 335
1 616 382 617 335
1 328 582 361 599
38 2
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 107 40 0 \NUL
Pham,Nghia
22 8 96 90 72 0 \NUL
ngmpham
19 32 216 91 197 0
in_3
19 32 240 91 221 0
in_2
19 32 264 91 245 0
in_1
19 32 288 91 269 0
in_0
20 157 216 216 197 0
a_3
20 157 240 216 221 0
a_2
20 157 264 216 245 0
a_1
20 157 288 216 269 0
a_0
22 106 32 160 8 0 \NUL
Part A
22 7 338 780 314 0 \NUL
This circuit work by using switches , which is sender and it send signal to the 7 segment( receiver)
22 10 375 667 351 0 \NUL
if the switch is 1 which mean its on, then the receiver are able to receive the signal.
22 8 421 642 397 0 \NUL
If the switch is 0 which mean its off, then the receiver can not receive the signal.
1 88 278 158 278
1 88 254 158 254
1 88 230 158 230
1 88 206 158 206
38 3
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 107 40 0 \NUL
Pham,Nghia
22 8 96 90 72 0 \NUL
ngmpham
19 44 202 103 183 0
in_1
19 44 226 103 207 0
in_0
14 182 245 231 196
35 177 107 226 58 0 0
20 394 330 453 311 0
b_0
20 421 71 480 52 0
b_2
20 384 176 443 157 0
b_1
22 150 33 204 9 0 \NUL
Part B
22 -4 369 805 345 0 \NUL
Base on the truth table, I saw the output of B0 is 0 all the way, which mean it was connected to ground
22 -3 442 479 418 0 \NUL
since I came up with the Boolean equation for the truth table
22 -3 404 498 380 0 \NUL
For B2 and B3, they were not nessescary need it for the circuit.
22 0 476 504 452 0 \NUL
I realized that it would be insufficient to draw out the big circuit.
22 2 504 691 480 0 \NUL
So I figured out the way that we can used XOR gate to shorten the length of the circuit.
22 -1 541 569 517 0 \NUL
So When I tested, the result are exacly like what the truth table showed.
1 100 216 178 96
1 100 192 178 68
1 228 220 395 320
1 223 82 422 61
1 100 216 385 166
38 4
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 111 40 0 \NUL
Pham, Nghia
22 8 96 90 72 0 \NUL
ngmpham
19 35 240 94 221 0
in_2
19 32 264 91 245 0
in_1
19 32 288 91 269 0
in_0
19 31 353 90 334 0
in_2
19 31 377 90 358 0
in_1
19 31 401 90 382 0
in_0
19 35 474 94 455 0
in_2
19 35 498 94 479 0
in_1
19 35 522 94 503 0
in_0
19 32 149 91 130 0
in_2
19 32 173 91 154 0
in_1
19 32 197 91 178 0
in_0
3 233 177 282 128 1 0
3 230 268 279 219 1 0
3 230 389 279 340 1 0
3 231 513 280 464 1 0
5 165 165 214 116 0
5 168 185 217 136 0
5 148 249 197 200 0
5 146 304 195 255 0
5 135 385 184 336 0
5 138 418 187 369 0
4 391 313 440 264 2 0
20 472 298 531 279 0
c_0
22 135 35 189 11 0 \NUL
Part C
22 15 564 741 540 0 \NUL
I used truth table in part C to come up with Boolean equation, which is a'b'c+a'bc'+ab'c'+abc
22 17 595 21 591 0 \NUL

22 14 594 694 570 0 \NUL
Then I converted the equation into the circuit, which inclu 4 And gate and one Or gate.
22 32 623 502 599 0 \NUL
Then I connected all the in put into the gate and stimulate it
22 26 655 338 631 0 \NUL
The result was the same as truth table.
1 166 140 88 139
1 234 138 211 140
1 169 160 88 163
1 234 152 214 160
1 234 166 88 187
1 149 224 91 230
1 231 229 194 224
1 231 243 88 254
1 147 279 88 278
1 231 257 192 279
1 231 350 87 343
1 136 360 87 367
1 231 364 181 360
1 139 393 87 391
1 231 378 184 393
1 232 474 91 464
1 232 488 91 488
1 232 502 91 512
1 392 274 279 152
1 392 283 276 243
1 392 293 276 364
1 392 302 277 488
1 473 288 437 288
38 5
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 107 40 0 \NUL
Pham,Nghia
22 8 96 90 72 0 \NUL
ngmpham
19 35 240 94 221 0
in_2
19 32 264 91 245 0
in_1
19 32 288 91 269 0
in_0
19 31 353 90 334 0
in_2
19 31 377 90 358 0
in_1
19 31 401 90 382 0
in_0
19 35 474 94 455 0
in_2
19 35 498 94 479 0
in_1
19 35 522 94 503 0
in_0
19 32 149 91 130 0
in_2
19 32 173 91 154 0
in_1
19 32 197 91 178 0
in_0
3 233 177 282 128 1 1
3 230 268 279 219 1 1
3 230 389 279 340 1 1
3 231 513 280 464 1 1
5 165 165 214 116 0
5 168 185 217 136 0
5 148 249 197 200 0
5 146 304 195 255 0
5 135 385 184 336 0
5 138 418 187 369 0
3 378 311 427 262 2 1
20 469 294 528 275 0
c_1
22 133 42 158 18 0 \NUL
C1
22 47 563 725 539 0 \NUL
For C1, it is similar C0, but what I changed was convert all the AND gate to NAND gate
22 52 600 340 576 0 \NUL
and changed OR gate to NAND gate
22 39 627 691 603 0 \NUL
Then I check it out the NAND gate truth table, so I can be sure it work on my circuit
22 37 664 423 640 0 \NUL
When I stimulate it, it work perfectly as I wanted.
1 166 140 88 139
1 234 138 211 140
1 169 160 88 163
1 234 152 214 160
1 234 166 88 187
1 149 224 91 230
1 231 229 194 224
1 231 243 88 254
1 147 279 88 278
1 231 257 192 279
1 231 350 87 343
1 136 360 87 367
1 231 364 181 360
1 139 393 87 391
1 231 378 184 393
1 232 474 91 464
1 232 488 91 488
1 232 502 91 512
1 379 272 279 152
1 379 281 276 243
1 379 291 276 364
1 379 300 277 488
1 470 284 424 286
38 6
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 111 40 0 \NUL
Pham, Nghia
22 8 96 90 72 0 \NUL
ngmpham
19 95 240 154 221 0
in_2
19 95 264 154 245 0
in_1
19 95 288 154 269 0
in_0
4 366 169 415 120 1 1
5 263 145 312 96 0
5 267 178 316 129 0
4 369 271 418 222 1 1
5 250 293 299 244 0
5 254 363 303 314 0
4 373 373 422 324 1 1
5 294 413 343 364 0
5 297 460 346 411 0
4 374 497 423 448 1 1
4 534 290 583 241 2 1
20 681 277 740 258 0
c_2
22 147 37 172 13 0 \NUL
C2
22 20 519 547 495 0 \NUL
It was similar to C1, I replace all the NAND gate with the NOR gate.
22 22 551 542 527 0 \NUL
Before I  stimulate it in, I checked out the truth table for NOR gate
22 11 583 757 559 0 \NUL
I saw that as long there is 1 in the input the output will be 0, but if the all input is 0 then will be 1
22 10 619 483 595 0 \NUL
As I tested it out on paper, it worked perfectly on my circuit.
22 9 658 426 634 0 \NUL
So, when I stimulate it, it give me the result I wanted.
1 264 120 151 230
1 268 153 151 254
1 367 130 309 120
1 367 144 313 153
1 367 158 151 278
1 251 268 151 230
1 370 246 151 254
1 255 338 151 278
1 370 232 296 268
1 370 260 300 338
1 374 334 151 230
1 295 388 151 254
1 298 435 151 278
1 374 348 340 388
1 374 362 343 435
1 375 458 151 230
1 375 472 151 254
1 375 486 151 278
1 535 251 412 144
1 535 260 415 246
1 535 270 419 348
1 535 279 420 472
1 682 267 580 265
39 16777215
47 0
40 1 8 8
50 800 800
51 1 30
30
System
20
700
0
0
1
2
2
34
