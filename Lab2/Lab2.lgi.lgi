41 2 0
38 1
8 252 396 301 347 1 0
8 318 396 367 347 1 0
22 258 348 424 328 0 \NUL
Read Register 1 Address
8 432 396 481 347 1 0
8 498 396 547 347 1 0
22 438 348 604 328 0 \NUL
Read Register 2 Address
20 720 414 787 395 0
wadr_0
20 654 414 721 395 0
wadr_1
8 606 396 655 347 1 0
8 672 396 721 347 1 0
22 612 348 767 328 0 \NUL
Write Register Address
20 480 414 547 395 0
adr2_1
20 546 414 613 395 0
adr2_0
20 366 414 433 395 0
adr1_0
20 300 414 367 395 0
adr1_1
19 166 108 233 89 0
reg0_2
19 154 84 221 65 0
reg0_3
19 190 156 257 137 0
reg0_0
19 178 132 245 113 0
reg0_1
11 258 108 285 10 0 1
22 144 36 255 16 0 \NUL
Register 0 Value
19 322 108 389 89 0
reg1_2
19 310 84 377 65 0
reg1_3
19 346 156 413 137 0
reg1_0
19 334 132 401 113 0
reg1_1
11 414 108 441 10 0 1
22 300 36 411 16 0 \NUL
Register 1 Value
19 478 108 545 89 0
reg2_2
19 466 84 533 65 0
reg2_3
19 502 156 569 137 0
reg2_0
19 490 132 557 113 0
reg2_1
11 570 108 597 10 0 1
22 456 36 567 16 0 \NUL
Register 2 Value
19 634 108 701 89 0
reg3_2
19 622 84 689 65 0
reg3_3
19 658 156 725 137 0
reg3_0
19 646 132 713 113 0
reg3_1
11 726 108 753 10 0 1
22 612 36 723 16 0 \NUL
Register 3 Value
19 640 264 707 245 0
alu_2
19 628 240 695 221 0
alu_3
19 664 312 731 293 0
alu_0
19 652 288 719 269 0
alu_1
11 732 264 759 166 0 1
22 648 192 724 172 0 \NUL
ALU Output
25 12 528 119 432
8 12 396 61 347 1 0
8 6 288 55 239 1 1
8 6 192 55 143 1 1
20 66 414 133 395 0
sel
20 60 210 127 191 0
clear
20 150 510 217 491 0
kpad_3
20 138 534 205 515 0
kpad_2
20 132 558 199 539 0
kpad_1
20 120 582 187 563 0
kpad_0
19 328 264 395 245 0
in1_2
19 316 240 383 221 0
in1_3
19 352 312 419 293 0
in1_0
19 340 288 407 269 0
in1_1
11 420 264 447 166 0 1
22 336 192 414 172 0 \NUL
ALU Input 1
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 99 10 0 \NUL
Pham, Nghia
22 12 54 80 34 0 \NUL
ngmpham
19 166 264 233 245 0
kpad_2
19 154 240 221 221 0
kpad_3
19 190 312 257 293 0
kpad_0
19 178 288 245 269 0
kpad_1
11 258 264 285 166 0 1
22 150 192 249 172 0 \NUL
Keypad Output
22 12 144 117 124 0 \NUL
Clear Registers
22 18 324 100 304 0 \NUL
Store Select
20 60 294 127 275 0
update
22 12 240 121 220 0 \NUL
Update Register
19 484 264 551 245 0
in2_2
19 472 240 539 221 0
in2_3
19 508 312 575 293 0
in2_0
19 496 288 563 269 0
in2_1
11 576 264 603 166 0 1
22 492 192 570 172 0 \NUL
ALU Input 2
22 18 348 230 328 0 \NUL
0 = Keypad input, 1 = ALU result
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
22 228 450 478 430 0 \NUL
Select clear to initialize registers to 0.
22 228 474 557 454 0 \NUL
Select store select to choose which value to store.
22 228 498 508 478 0 \NUL
Choose read and write register addresses.
22 228 522 727 502 0 \NUL
Read addresses = reg sources of ALU inputs, Write address = reg to save to
22 228 546 480 526 0 \NUL
Press update to save value to register
22 228 594 668 574 0 \NUL
You are only permitted to modify the header comment on this page.
1 652 371 655 404
1 718 371 721 404
1 478 371 481 404
1 544 371 547 404
1 364 371 367 404
1 298 371 301 404
1 61 200 52 167
1 67 404 58 371
1 151 500 116 500
1 139 524 116 506
1 133 548 116 512
1 121 572 116 518
1 61 284 52 263
1 210 74 259 74
1 222 98 259 80
1 366 74 415 74
1 378 98 415 80
1 390 122 415 86
1 234 122 259 86
1 246 146 259 92
1 402 146 415 92
1 522 74 571 74
1 534 98 571 80
1 546 122 571 86
1 558 146 571 92
1 678 74 727 74
1 690 98 727 80
1 702 122 727 86
1 714 146 727 92
1 210 230 259 230
1 222 254 259 236
1 234 278 259 242
1 246 302 259 248
1 372 230 421 230
1 384 254 421 236
1 396 278 421 242
1 408 302 421 248
1 528 230 577 230
1 540 254 577 236
1 552 278 577 242
1 564 302 577 248
1 684 230 733 230
1 696 254 733 236
1 708 278 733 242
1 720 302 733 248
38 2
22 294 42 365 22 0 \NUL
Register 0
22 10 480 621 460 0 \NUL
This circuit for register 0 was formed by using 4 D FlipFlop for each register0_0 to register0_3
22 5 503 497 483 0 \NUL
With that I connected input_0 to input_3 for each register0_0 to register0_3.
22 0 546 555 526 0 \NUL
Since the D flip flop store store input data and transfer to output Q when it rising edge
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 99 10 0 \NUL
Pham, Nghia
22 12 54 80 34 0 \NUL
ngmpham
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
24 353 172 402 100 1 1 1
24 351 262 400 190 1 1 1
24 351 350 400 278 1 1 1
24 350 445 399 373 1 1 1
19 53 126 112 107 0
bit_0
19 59 179 126 160 0
clear
19 47 248 106 229 0
select_0
19 48 219 107 200 0
bit_1
19 55 270 122 251 0
clear
19 52 336 111 317 0
select_0
19 56 306 115 287 0
bit_2
19 53 364 120 345 0
clear
19 53 422 112 403 0
select_0
19 51 393 110 374 0
bit_3
19 52 448 119 429 0
clear
15 259 116 308 67
15 286 224 335 175
15 282 315 331 266
15 291 407 340 358
20 622 277 689 258 0
reg0_3
20 620 256 687 237 0
reg0_2
20 619 232 686 213 0
reg0_1
20 619 206 686 187 0
reg0_0
5 209 190 258 141 0
5 209 289 258 240 0
5 219 371 268 322 0
5 221 458 270 409 0
19 54 151 113 132 0
select_0
22 10 527 450 507 0 \NUL
Each D flip flop was connected with select and clear signal receiver
22 -1 568 636 548 0 \NUL
Meaning, when the write select register logic want to select register 0 to have that number of input
22 -1 590 787 570 0 \NUL
Then the D flipflop for register 0 will give out the output of the input we type in for register 0 and the rest of registers are 0
1 354 120 109 116
1 352 228 103 238
1 352 210 104 209
1 352 316 108 326
1 352 298 112 296
1 351 411 109 412
1 351 393 107 383
1 367 102 305 91
1 365 192 332 199
1 365 280 328 290
1 364 375 337 382
1 620 196 399 120
1 620 222 397 210
1 210 165 115 169
1 367 168 255 165
1 210 264 111 260
1 365 258 255 264
1 220 346 109 354
1 365 346 265 346
1 222 433 108 438
1 364 441 267 433
1 354 138 110 141
1 621 246 397 298
1 623 267 396 393
38 3
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 99 10 0 \NUL
Pham, Nghia
22 12 54 80 34 0 \NUL
ngmpham
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
22 28 483 518 463 0 \NUL
This is the same as register 0 but just the number of register are difference
24 353 172 402 100 1 1 1
24 351 262 400 190 1 1 1
24 351 350 400 278 1 1 1
24 350 445 399 373 1 1 1
19 58 152 117 133 0
select_1
19 54 126 113 107 0
bit_0
19 59 179 126 160 0
clear
19 52 244 111 225 0
select_1
19 51 215 110 196 0
bit_1
19 55 270 122 251 0
clear
19 53 334 112 315 0
select_1
19 48 310 107 291 0
bit_2
19 53 364 120 345 0
clear
19 49 421 108 402 0
select_1
19 49 397 108 378 0
bit_3
15 259 116 308 67
15 286 224 335 175
15 282 315 331 266
15 291 407 340 358
20 622 282 689 263 0
reg1_3
20 622 253 689 234 0
reg1_2
20 624 235 691 216 0
reg1_1
20 624 211 691 192 0
reg1_0
19 52 447 119 428 0
clear
5 213 191 262 142 0
5 216 279 265 230 0
5 215 374 264 325 0
5 218 455 267 406 0
22 257 43 323 23 0 \NUL
register 1
1 354 120 110 116
1 354 138 114 142
1 352 228 108 234
1 352 210 107 205
1 352 316 109 324
1 352 298 104 300
1 351 411 105 411
1 351 393 105 387
1 365 192 332 199
1 365 280 328 290
1 364 375 337 382
1 367 102 305 91
1 625 201 399 120
1 625 225 397 210
1 623 243 397 298
1 623 272 396 393
1 214 166 115 169
1 367 168 259 166
1 217 254 111 260
1 365 258 262 254
1 216 349 109 354
1 365 346 261 349
1 219 430 108 437
1 364 441 264 430
38 4
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 99 10 0 \NUL
Pham, Nghia
22 12 54 80 34 0 \NUL
ngmpham
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
24 353 172 402 100 1 1 1
24 351 262 400 190 1 1 1
24 351 350 400 278 1 1 1
24 350 445 399 373 1 1 1
19 61 153 120 134 0
select_2
19 58 124 117 105 0
bit_0
19 59 179 126 160 0
clear
19 57 238 116 219 0
select_2
19 56 215 115 196 0
bit_1
19 55 270 122 251 0
clear
19 52 330 111 311 0
select_2
19 50 308 109 289 0
bit_2
19 53 364 120 345 0
clear
19 51 424 110 405 0
select_2
19 52 400 111 381 0
bit_3
19 52 448 119 429 0
clear
15 286 224 335 175
15 282 315 331 266
15 291 407 340 358
15 282 111 331 62
20 667 273 734 254 0
reg2_3
20 665 246 732 227 0
reg2_2
20 666 224 733 205 0
reg2_1
20 666 201 733 182 0
reg2_0
5 217 189 266 140 0
5 210 281 259 232 0
5 222 374 271 325 0
5 216 466 265 417 0
22 240 31 306 11 0 \NUL
register 2
22 11 480 389 460 0 \NUL
Same as the other registers with just the number changed
1 354 120 114 114
1 354 138 117 143
1 352 228 113 228
1 352 210 112 205
1 352 316 108 320
1 352 298 106 298
1 351 411 107 414
1 351 393 108 390
1 365 192 332 199
1 365 280 328 290
1 364 375 337 382
1 367 102 328 86
1 667 191 399 120
1 667 214 397 210
1 666 236 397 298
1 668 263 396 393
1 218 164 115 169
1 367 168 263 164
1 223 349 109 354
1 365 346 268 349
1 217 441 108 438
1 364 441 262 441
1 211 256 111 260
1 365 258 256 256
38 5
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 99 10 0 \NUL
Pham, Nghia
22 12 54 80 34 0 \NUL
ngmpham
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
24 353 172 402 100 1 1 1
24 351 262 400 190 1 1 1
24 351 350 400 278 1 1 1
24 350 445 399 373 1 1 1
19 58 146 117 127 0
select_3
19 55 123 114 104 0
bit_0
19 59 179 126 160 0
clear
19 54 249 113 230 0
select_3
19 53 224 112 205 0
bit_1
19 55 270 122 251 0
clear
19 52 343 111 324 0
select_3
19 49 314 108 295 0
bit_2
19 53 364 120 345 0
clear
19 51 417 110 398 0
select_3
19 51 392 110 373 0
bit_3
19 52 448 119 429 0
clear
15 259 116 308 67
15 286 224 335 175
15 282 315 331 266
15 291 407 340 358
20 604 313 671 294 0
reg3_3
20 607 290 674 271 0
reg3_2
20 606 261 673 242 0
reg3_1
20 606 231 673 212 0
reg3_0
5 208 187 257 138 0
5 210 282 259 233 0
5 215 373 264 324 0
5 215 469 264 420 0
22 223 45 294 25 0 \NUL
Register 3
22 85 492 656 472 0 \NUL
The process are the same as the other register, but with the diffrent number for register.
1 354 120 111 113
1 354 138 114 136
1 352 228 110 239
1 352 210 109 214
1 352 316 108 333
1 352 298 105 304
1 351 411 107 407
1 351 393 107 382
1 365 192 332 199
1 365 280 328 290
1 364 375 337 382
1 367 102 305 91
1 607 221 399 120
1 607 251 397 210
1 608 280 397 298
1 605 303 396 393
1 209 162 115 169
1 367 168 254 162
1 211 257 111 260
1 365 258 256 257
1 216 348 109 354
1 365 346 261 348
1 216 444 108 438
1 364 441 261 444
38 6
31 305 312 354 227 0 4
19 25 206 92 187 0
wadr_1
19 25 231 92 212 0
wadr_0
20 492 243 551 224 0
select_3
20 499 265 558 246 0
select_2
20 497 294 556 275 0
select_1
20 501 323 560 304 0
select_0
19 23 262 90 243 0
update
5 145 354 194 305 0
22 272 100 459 80 0 \NUL
Write register selected logic
22 22 366 450 346 0 \NUL
wadr_1 and wadr_0 are the write register address for all registers
22 20 394 616 374 0 \NUL
The Update signal receiver is for storing the value of input into the register we want to store
22 16 417 544 397 0 \NUL
Wadr_1 and wadr_0 are connected to demux meaning decoder and mux combine
22 15 443 431 423 0 \NUL
the mux will help to transfer the value into the register it wanted
22 13 466 532 446 0 \NUL
The decoder will help to prevent all the register will have the same output value
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 99 10 0 \NUL
Pham, Nghia
22 12 54 80 34 0 \NUL
ngmpham
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
1 306 290 81 196
1 306 296 81 221
1 493 233 351 254
1 500 255 351 260
1 498 284 351 266
1 502 313 351 272
1 79 252 146 329
1 191 329 306 308
38 7
19 11 267 78 248 0
adr1_1
19 12 289 79 270 0
adr1_0
20 261 218 328 199 0
in1_3
20 630 280 697 261 0
in1_2
20 282 420 349 401 0
in1_1
20 642 104 709 85 0
in1_0
19 15 177 82 158 0
reg3_3
19 11 201 78 182 0
reg2_3
19 13 223 80 204 0
reg1_3
19 11 248 78 229 0
reg0_3
31 198 251 247 166 0 1
19 377 330 444 311 0
adr1_1
19 378 352 445 333 0
adr1_0
19 381 240 448 221 0
reg3_2
19 377 264 444 245 0
reg2_2
19 379 286 446 267 0
reg1_2
19 377 311 444 292 0
reg0_2
31 564 314 613 229 0 1
19 24 470 91 451 0
adr1_1
19 25 492 92 473 0
adr1_0
19 28 380 95 361 0
reg3_1
19 24 404 91 385 0
reg2_1
19 26 426 93 407 0
reg1_1
19 24 451 91 432 0
reg0_1
31 211 454 260 369 0 1
19 364 154 431 135 0
adr1_1
19 365 176 432 157 0
adr1_0
19 368 64 435 45 0
reg3_0
19 364 88 431 69 0
reg2_0
19 366 110 433 91 0
reg1_0
19 364 135 431 116 0
reg0_0
31 551 138 600 53 0 1
14 500 373 549 324
14 167 517 216 468
14 127 293 176 244
14 483 196 532 147
22 351 33 429 13 0 \NUL
ALU input 1
22 217 528 787 508 0 \NUL
this circuit work by The value that stored in the register will be transfer as the ALU input
22 162 556 794 536 0 \NUL
The adr1_1 and adrl_0 are purpose to tell which register need to transfer their data into ALU input
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 99 10 0 \NUL
Pham, Nghia
22 12 54 80 34 0 \NUL
ngmpham
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
22 162 556 794 536 0 \NUL
The adr1_1 and adrl_0 are purpose to tell which register need to transfer their data into ALU input
1 199 193 71 167
1 199 199 67 191
1 199 205 69 213
1 199 211 67 238
1 199 229 67 257
1 199 235 68 279
1 262 208 244 205
1 565 256 437 230
1 565 262 433 254
1 565 268 435 276
1 565 274 433 301
1 565 292 433 320
1 565 298 434 342
1 631 270 610 268
1 212 396 84 370
1 212 402 80 394
1 212 408 82 416
1 212 414 80 441
1 212 432 80 460
1 212 438 81 482
1 283 410 257 408
1 552 80 424 54
1 552 86 420 78
1 552 92 422 100
1 552 98 420 125
1 552 116 420 144
1 552 122 421 166
1 643 94 597 92
1 546 348 565 310
1 213 492 212 450
1 173 268 199 247
1 529 171 552 134
38 8
19 454 195 521 176 0
adr2_1
19 454 222 521 203 0
adr2_0
19 457 102 524 83 0
reg3_0
19 453 126 520 107 0
reg2_0
19 455 148 522 129 0
reg1_0
19 453 173 520 154 0
reg0_0
31 640 176 689 91 0 1
20 703 351 770 332 0
in2_3
20 279 232 346 213 0
in2_1
20 713 139 780 120 0
in2_0
19 10 287 77 268 0
adr2_1
19 10 314 77 295 0
adr2_0
19 13 194 80 175 0
reg3_1
19 9 218 76 199 0
reg2_1
19 11 240 78 221 0
reg1_1
19 9 265 76 246 0
reg0_1
31 196 268 245 183 0 1
19 10 444 77 425 0
adr2_1
19 10 471 77 452 0
adr2_0
19 13 351 80 332 0
reg3_2
19 9 375 76 356 0
reg2_2
19 11 397 78 378 0
reg1_2
19 9 422 76 403 0
reg0_2
31 196 425 245 340 0 1
19 10 444 77 425 0
adr2_1
19 10 471 77 452 0
adr2_0
19 13 351 80 332 0
reg3_2
19 9 375 76 356 0
reg2_2
19 11 397 78 378 0
reg1_2
19 9 422 76 403 0
reg0_2
31 196 425 245 340 0 1
19 434 405 501 386 0
adr2_1
19 434 432 501 413 0
adr2_0
19 437 312 504 293 0
reg3_3
19 433 336 500 317 0
reg2_3
19 435 358 502 339 0
reg1_3
19 433 383 500 364 0
reg0_3
31 620 386 669 301 0 1
14 533 458 582 409
14 125 504 174 455
14 560 224 609 175
14 142 331 191 282
20 278 387 337 368 0
in2_2
22 349 33 431 13 0 \NUL
ALU  input 2
22 99 552 473 532 0 \NUL
This is the same as ALU input 1 but with difffrent address
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 99 10 0 \NUL
Pham, Nghia
22 12 54 80 34 0 \NUL
ngmpham
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
1 641 118 513 92
1 641 124 509 116
1 641 130 511 138
1 641 136 509 163
1 641 154 510 185
1 641 160 510 212
1 714 129 686 130
1 197 210 69 184
1 197 216 65 208
1 197 222 67 230
1 197 228 65 255
1 197 246 66 277
1 197 252 66 304
1 280 222 242 222
1 197 367 69 341
1 197 373 65 365
1 197 379 67 387
1 197 385 65 412
1 197 403 66 434
1 197 409 66 461
1 197 367 69 341
1 197 373 65 365
1 197 379 67 387
1 197 385 65 412
1 197 403 66 434
1 197 409 66 461
1 621 328 493 302
1 621 334 489 326
1 621 340 491 348
1 621 346 489 373
1 621 364 490 395
1 621 370 490 422
1 704 341 666 340
1 606 199 641 172
1 188 306 197 264
1 171 479 197 421
1 579 433 621 382
1 242 379 279 377
38 9
19 19 171 78 152 0
alu_3
19 19 194 78 175 0
kpad_3
19 20 218 79 199 0
sel
31 209 226 258 141 0 2
14 128 249 177 200
20 299 193 358 174 0
bit_3
19 19 276 78 257 0
alu_2
19 19 299 78 280 0
kpad_2
19 20 323 79 304 0
sel
31 209 331 258 246 0 2
14 114 359 163 310
20 299 298 358 279 0
bit_2
19 18 379 77 360 0
alu_1
19 18 402 77 383 0
kpad_1
19 19 426 78 407 0
sel
31 208 434 257 349 0 2
14 113 462 162 413
20 298 401 357 382 0
bit_1
19 18 501 77 482 0
alu_0
19 18 524 77 505 0
kpad_0
19 19 548 78 529 0
sel
31 208 556 257 471 0 2
14 113 584 162 535
20 298 523 357 504 0
bit_0
22 286 100 379 80 0 \NUL
store selector
22 271 350 794 330 0 \NUL
This circuit worked by if the store selector input 0, it will take the keypad number
22 264 449 646 429 0 \NUL
 If the store selector input 1, it take the ALU output as input
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 99 10 0 \NUL
Pham, Nghia
22 12 54 80 34 0 \NUL
ngmpham
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
1 75 161 210 180
1 75 184 210 186
1 76 208 210 210
1 174 224 210 222
1 255 180 300 183
1 75 266 210 285
1 75 289 210 291
1 76 313 210 315
1 160 334 210 327
1 255 285 300 288
1 74 369 209 388
1 74 392 209 394
1 75 416 209 418
1 159 437 209 430
1 254 388 299 391
1 74 491 209 510
1 74 514 209 516
1 75 538 209 540
1 159 559 209 552
1 254 510 299 513
38 10
20 692 327 759 308 0
alu_3
20 344 418 411 399 0
alu_2
20 326 213 393 194 0
alu_1
20 716 110 783 91 0
alu_0
19 410 63 469 44 0
in1_1
19 410 86 469 67 0
in1_2
19 410 110 469 91 0
in1_3
19 413 134 472 115 0
in1_0
19 413 159 472 140 0
in2_1
19 411 182 470 163 0
in2_0
31 601 143 650 58 0 1
14 522 175 571 126
19 410 63 469 44 0
in1_1
19 410 86 469 67 0
in1_2
19 410 110 469 91 0
in1_3
19 413 134 472 115 0
in1_0
19 413 159 472 140 0
in2_1
19 411 182 470 163 0
in2_0
19 11 242 70 223 0
in1_1
19 17 175 76 156 0
in1_2
19 10 196 69 177 0
in1_3
19 13 220 72 201 0
in1_0
19 14 268 73 249 0
in2_1
19 12 291 71 272 0
in2_0
31 202 252 251 167 0 1
14 147 315 196 266
19 26 412 85 393 0
in1_1
19 28 437 87 418 0
in1_2
19 28 394 87 375 0
in1_0
19 26 458 85 439 0
in2_1
19 29 488 88 469 0
in2_0
31 219 449 268 364 0 1
14 164 512 213 463
19 23 369 82 350 0
in1_3
19 403 297 462 278 0
in1_1
19 403 319 462 300 0
in1_2
19 406 272 465 253 0
in1_0
19 403 369 462 350 0
in2_1
19 406 399 465 380 0
in2_0
31 596 360 645 275 0 1
14 541 423 590 374
19 405 343 464 324 0
in1_3
22 364 26 438 6 0 \NUL
ALU output
22 79 571 708 551 0 \NUL
This ciruit worked by The ALU will do the left bit wise rotation to produce the ALU output I wanted.
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 99 10 0 \NUL
Pham, Nghia
22 12 54 80 34 0 \NUL
ngmpham
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
1 602 85 466 53
1 602 91 466 76
1 602 97 466 100
1 602 103 469 124
1 602 121 469 149
1 602 127 467 172
1 602 139 568 150
1 717 100 647 97
1 602 85 466 53
1 602 91 466 76
1 602 97 466 100
1 602 103 469 124
1 602 121 469 149
1 602 127 467 172
1 203 248 193 290
1 203 194 73 165
1 203 200 66 186
1 203 206 69 210
1 203 212 67 232
1 203 230 70 258
1 203 236 68 281
1 327 203 248 206
1 220 445 210 487
1 220 433 85 478
1 220 427 82 448
1 220 409 84 427
1 220 403 82 402
1 220 397 84 384
1 220 391 79 359
1 345 408 265 403
1 597 356 587 398
1 597 344 462 389
1 597 338 459 359
1 597 302 462 262
1 597 308 459 287
1 597 314 459 309
1 597 320 461 333
1 693 317 642 314
39 16777215
47 0
40 1 6 6
50 800 600
51 0 100
30
System
16
700
0
0
0
0
0
34
